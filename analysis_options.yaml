# This file configures the analyzer, which statically analyzes Dart code to
# check for errors, warnings, and lints.
#
# The issues identified by the analyzer are surfaced in the UI of Dart-enabled
# IDEs (https://dart.dev/tools#ides-and-editors). The analyzer can also be
# invoked from the command line by running `flutter analyze`.

# The following line activates a set of recommended lints for Flutter apps,
# packages, and plugins designed to encourage good coding practices.
include: package:flutter_lints/flutter.yaml

linter:
  rules:
    # - sort_pub_dependencies
    - combinators_ordering
    - directives_ordering
    - sort_unnamed_constructors_first
    - sort_child_properties_last
    - prefer_relative_imports
    - prefer_interpolation_to_compose_strings
    - eol_at_end_of_file
    - require_trailing_commas
    - always_declare_return_types
    - empty_catches
    - empty_constructor_bodies
    - camel_case_types
    - file_names
    - constant_identifier_names
    - unnecessary_late
    - unnecessary_getters_setters
    - unnecessary_parenthesis
    - use_key_in_widget_constructors
    - no_leading_underscores_for_local_identifiers
    - no_leading_underscores_for_library_prefixes
    - library_private_types_in_public_api
